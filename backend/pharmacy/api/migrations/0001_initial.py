# Generated by Django 5.0 on 2025-08-04 06:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiMedicine',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('quantity', models.IntegerField()),
                ('expiry_date', models.DateField()),
            ],
            options={
                'db_table': 'api_medicine',
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('branch_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'db_table': 'branches',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('method_id', models.AutoField(primary_key=True, serialize=False)),
                ('method_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='Prescriptions',
            fields=[
                ('prescription_id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.URLField(blank=True, max_length=255, null=True)),
                ('classification', models.IntegerField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'prescriptions',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('class_level', models.IntegerField(blank=True, null=True)),
                ('need_approval', models.BooleanField(default=False)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='StatusDimension',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_type', models.CharField(max_length=50)),
                ('status_name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'status_dimension',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('current_address', models.CharField(blank=True, max_length=200, null=True)),
                ('province', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar_url', models.CharField(blank=True, max_length=200, null=True)),
                ('preferred_theme', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('patient', 'Patient'), ('doctor', 'Doctor'), ('pharmacist', 'Pharmacist'), ('admin', 'Admin')], max_length=50)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branches')),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.prescriptions')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.statusdimension')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionItems',
            fields=[
                ('prescription_items_id', models.AutoField(primary_key=True, serialize=False)),
                ('dosage_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(max_length=50)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.prescriptions')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.products')),
            ],
            options={
                'db_table': 'prescription_items',
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('order_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.products')),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_id', models.AutoField(primary_key=True, serialize=False)),
                ('available_qty', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('reserved_qty', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.branches')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.products')),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.AddField(
            model_name='prescriptions',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.statusdimension'),
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('insurance_included', models.BooleanField(default=False)),
                ('insurance_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.paymentmethods')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.orders')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.statusdimension')),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='UserProductViews',
            fields=[
                ('view_id', models.AutoField(primary_key=True, serialize=False)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.products')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_product_views',
            },
        ),
        migrations.CreateModel(
            name='UserPointTransactions',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=100)),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_point_transactions',
            },
        ),
        migrations.CreateModel(
            name='UserMedicalHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_medical_history',
            },
        ),
        migrations.CreateModel(
            name='UserActivityLogs',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_spent_seconds', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('points_earned', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_activity_logs',
            },
        ),
        migrations.AddField(
            model_name='prescriptions',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_doctor_set', to='api.users'),
        ),
        migrations.AddField(
            model_name='prescriptions',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users'),
        ),
        migrations.CreateModel(
            name='PrescriptionApprovals',
            fields=[
                ('approval_id', models.AutoField(primary_key=True, serialize=False)),
                ('decision', models.CharField(max_length=50)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('approved_at', models.DateTimeField(auto_now_add=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.prescriptions')),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'prescription_approvals',
            },
        ),
        migrations.CreateModel(
            name='UserSearchLogs',
            fields=[
                ('search_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('search_filters', models.CharField(blank=True, max_length=255, null=True)),
                ('results_count', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_search_logs',
            },
        ),
        migrations.CreateModel(
            name='UserUiInteractions',
            fields=[
                ('interaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('component', models.CharField(max_length=100)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(max_length=100)),
                ('occurred_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
            options={
                'db_table': 'user_ui_interactions',
            },
        ),
    ]
